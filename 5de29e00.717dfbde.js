(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{192:function(e,n,t){"use strict";t.r(n),n.default=t.p+"assets/files/Printer-Simulatioun-12e61682206a58427031a31ff3689007.zip"},96:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return g})),t.d(n,"metadata",(function(){return T})),t.d(n,"toc",(function(){return k})),t.d(n,"default",(function(){return v}));var i=t(3),a=t(7),r=t(0),s=t.n(r),l=t(101),u=t(115),m=t(99),o=t(82),p=t.n(o),c=37,f=39;var d=function(e){var n=e.lazy,t=e.block,i=e.defaultValue,a=e.values,l=e.groupId,o=e.className,d=Object(u.a)(),b=d.tabGroupChoices,g=d.setTabGroupChoices,T=Object(r.useState)(i),k=T[0],y=T[1],v=r.Children.toArray(e.children);if(null!=l){var O=b[l];null!=O&&O!==k&&a.some((function(e){return e.value===O}))&&y(O)}var j=function(e){y(e),null!=l&&g(l,e)},N=[];return s.a.createElement("div",null,s.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(m.a)("tabs",{"tabs--block":t},o)},a.map((function(e){var n=e.value,t=e.label;return s.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":k===n,className:Object(m.a)("tabs__item",p.a.tabItem,{"tabs__item--active":k===n}),key:n,ref:function(e){return N.push(e)},onKeyDown:function(e){!function(e,n,t){switch(t.keyCode){case f:!function(e,n){var t=e.indexOf(n)+1;e[t]?e[t].focus():e[0].focus()}(e,n);break;case c:!function(e,n){var t=e.indexOf(n)-1;e[t]?e[t].focus():e[e.length-1].focus()}(e,n)}}(N,e.target,e)},onFocus:function(){return j(n)},onClick:function(){j(n)}},t)}))),n?Object(r.cloneElement)(v.filter((function(e){return e.props.value===k}))[0],{className:"margin-vert--md"}):s.a.createElement("div",{className:"margin-vert--md"},v.map((function(e,n){return Object(r.cloneElement)(e,{key:n,hidden:e.props.value!==k})}))))};var b=function(e){var n=e.children,t=e.hidden,a=e.className;return s.a.createElement("div",Object(i.a)({role:"tabpanel"},{hidden:t,className:a}),n)},g={id:"simulatiounen",title:"Simulatiounen",sidebar_label:"Simulatiounen (WIP)"},T={unversionedId:"info-1/simulatiounen",id:"info-1/simulatiounen",isDocsHomePage:!1,title:"Simulatiounen",description:"Printer Simulatioun",source:"@site/docs/info-1/simulatioun.mdx",slug:"/info-1/simulatiounen",permalink:"/docs/info-1/simulatiounen",version:"current",sidebar_label:"Simulatiounen (WIP)",sidebar:"someSidebar",previous:{title:"Roadmap",permalink:"/docs/info-1/roadmap1"},next:{title:"Rekursioun",permalink:"/docs/info-1/rekursioun"}},k=[{value:"Printer Simulatioun",id:"printer-simulatioun",children:[]}],y={toc:k};function v(e){var n=e.components,r=Object(a.a)(e,["components"]);return Object(l.b)("wrapper",Object(i.a)({},y,r,{components:n,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"printer-simulatioun"},"Printer Simulatioun"),Object(l.b)("p",null,Object(l.b)("a",{target:"_blank",href:t(192).default},"Klick hei fir de Fichier mat den Dateien ze downloaden")),Object(l.b)("p",null,"Fir d'Simulatioun auszef\xe9ieren muss de Package ",Object(l.b)("inlineCode",{parentName:"p"},"matplotlib")," install\xe9iert sin. "),Object(l.b)(d,{defaultValue:"simulatioun",values:[{label:"Queue.py",value:"queue"},{label:"Task.py",value:"task"},{label:"Printer.py",value:"printer"},{label:"Simul3.py",value:"simulatioun"}],mdxType:"Tabs"},Object(l.b)(b,{value:"queue",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(i.a)({parentName:"pre"},{className:"language-python",metastring:'title="Queue.py"',title:'"Queue.py"'}),"class Queue:\n    def __init__(self):\n        self.items = []\n\n    def empty(self):\n        return self.items == []\n\n    def enqueue(self, item):\n        self.items.insert(0,item)\n\n    def dequeue(self):\n        return self.items.pop()\n\n    def top(self):\n        return(self.items[-1])\n\n    def size(self):\n        return len(self.items)\n\n    def print(self):\n        print(self.items[:-1])\n"))),Object(l.b)(b,{value:"task",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(i.a)({parentName:"pre"},{className:"language-python",metastring:'title="task.py"',title:'"task.py"'}),"import random\n\nclass Task:\n    def __init__(self,temps):\n        self.timeStamp = temps\n        self.pages = random.randrange(1,21)\n\n    def getTimeStamp(self):\n        return self.timeStamp\n\n    def getNbrPages(self):\n        return self.pages\n\n    def taskWaitingTime(self, timeNow):\n        return timeNow - self.timeStamp\n\n"))),Object(l.b)(b,{value:"printer",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(i.a)({parentName:"pre"},{className:"language-python",metastring:'title="printer.py"',title:'"printer.py"'}),"from Task import *\n\nclass Printer:\n    def __init__(self,nom,ppm):\n\n        self.printSpeed = ppm\n        self.currentTask = None\n        self.remainingTime = 0\n        self.name = nom\n\n    def busy(self):\n\n        if self.currentTask != None:\n            return True\n        else return False\n\n    def tick(self):\n        if self.currentTask != None:\n            self.remainingTime = self.remainingTime - 1\n            if self.remainingTime <= 0:\n                self.currentTask = None\n\n    def startNextJob(self, task):\n        self.currentTask = task\n        self.remainingTime = task.getNbrPages() * 60 / self.printSpeed\n"))),Object(l.b)(b,{value:"simulatioun",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(i.a)({parentName:"pre"},{className:"language-python",metastring:'title="Simul3.py"',title:'"Simul3.py"'}),"from Queue import *\nfrom Printer import *\nfrom Task import *\n\n\ndef simulation(nbrSeconds, ppm):\n    def newPrintTask():\n        num = random.randrange(1, 120)\n        if num == 1:\n            return True\n        else:\n            return False\n\n    printer1 = Printer('Bureau', ppm)\n    pq = Queue()\n    waitingTime = []\n\n    for second in range(nbrSeconds):\n        if newPrintTask():\n            task = Task(second)\n            pq.enqueue(task)\n        if (not printer1.busy()) and (not pq.empty()):\n            newTask = pq.top()\n            pq.dequeue()\n            waitingTime.append(newTask.taskWaitingTime(second))\n            printer1.startNextJob(newTask)\n\n        printer1.tick()\n\n    return sum(waitingTime) / len(waitingTime)\n\n\n\nx = []\ny = []\nnbrSimulations = 10\nfor ppm in range(6, 20):\n    sumWaitingTime = 0\n    for i in range(nbrSimulations):\n        sumWaitingTime = sumWaitingTime + simulation(28800, ppm)\n    x.append(ppm)\n    y.append(sumWaitingTime / nbrSimulations)\n\nimport matplotlib.pyplot as plt\n\nplt.scatter(x, y)\nplt.title('Simulation du temps d\\'attente lors d\\'impressions')\nplt.xlabel('Vitesse d\\'impression de l\\'imprimante en ppm')\nplt.ylabel('Temps d\\'attente en secondes')\nplt.show()\n")))))}v.isMDXComponent=!0}}]);